package main

import "fmt"

func Operator() {

	/*
			计算中的存储、运算，网络传输等任何的行为，本质上都是二进制的操作
			位运算指的是二进制之间的运算

			运算符的优先级
		     precedence   operator
				5         * / % << >> & &^
				4         + - | ^
				3         ==  != < <= > >=
				2         &&
				1         ||
	*/

	// 5 ->  0000101
	// 99 -> 1100011
	// 与运算(全为1， 才为1)
	r1 := 5 & 99
	fmt.Println(r1) // 1

	// 按位进行或运算（只要有1就得1）
	r2 := 5 | 99
	fmt.Println(r2) // 1100111  -> 2**6 + 2**5 + 2**2 +2 + 1  => 103

	// 按位进行异或运算 （只要不同就位1）
	r3 := 5 ^ 99
	fmt.Println(r3) // 1100110 -> 102

	// 按位向左移动
	r4 := 5 << 2
	// 101 -> 10100 -> 2** 4 + 2**2
	fmt.Println(r4)

	// 按位向右移动
	r5 := 5 >> 1
	// 101  -> 10 - > 2
	fmt.Println(r5)

	// 比较清除
	r6 := 5 &^ 99
	// 以前面的值位基准，让前面的和后面的值的二进制位进行比较，如果两个位置都是1，则将前面的值的那个位置置0
	// 5 ->  0000101
	// 99 -> 1100011
	//       0000100   -》 2*2 =4
	fmt.Println(r6)
}
